{
  "_args": [
    [
      {
        "raw": "properties-reader@0.0.15",
        "scope": null,
        "escapedName": "properties-reader",
        "name": "properties-reader",
        "rawSpec": "0.0.15",
        "spec": "0.0.15",
        "type": "version"
      },
      "/Users/Noora/Desktop/Projects/Alexa/Quizbot/node_modules/bespoken-tools"
    ]
  ],
  "_from": "properties-reader@0.0.15",
  "_id": "properties-reader@0.0.15",
  "_inCache": true,
  "_location": "/properties-reader",
  "_nodeVersion": "4.1.2",
  "_npmUser": {
    "name": "steveukx",
    "email": "steve@mydev.co"
  },
  "_npmVersion": "2.14.4",
  "_phantomChildren": {},
  "_requested": {
    "raw": "properties-reader@0.0.15",
    "scope": null,
    "escapedName": "properties-reader",
    "name": "properties-reader",
    "rawSpec": "0.0.15",
    "spec": "0.0.15",
    "type": "version"
  },
  "_requiredBy": [
    "/bespoken-tools"
  ],
  "_resolved": "https://registry.npmjs.org/properties-reader/-/properties-reader-0.0.15.tgz",
  "_shasum": "260a20a122a32aa7fe166bd237a0abeecff53086",
  "_shrinkwrap": null,
  "_spec": "properties-reader@0.0.15",
  "_where": "/Users/Noora/Desktop/Projects/Alexa/Quizbot/node_modules/bespoken-tools",
  "author": {
    "name": "Steve King",
    "email": "steve@mydev.co"
  },
  "bin": {},
  "bugs": {
    "url": "https://github.com/steveukx/properties/issues"
  },
  "contributors": [
    {
      "name": "Steve King",
      "email": "steve@mydev.co"
    },
    {
      "name": "Aureliano Bergese",
      "email": "onailerua@hotmail.coom"
    }
  ],
  "dependencies": {
    "mkdirp": "~0.3.5"
  },
  "description": "Properties file reader for Node.js",
  "devDependencies": {
    "unit-test": "*"
  },
  "directories": {},
  "dist": {
    "shasum": "260a20a122a32aa7fe166bd237a0abeecff53086",
    "tarball": "https://registry.npmjs.org/properties-reader/-/properties-reader-0.0.15.tgz"
  },
  "engines": {
    "node": ">= 0.4.1"
  },
  "gitHead": "5634bc8239fc0238fe08c35fea7fc8b6b136cb5c",
  "homepage": "https://github.com/steveukx/properties#readme",
  "keywords": [
    "properties",
    "ini",
    "parser"
  ],
  "license": "MIT",
  "main": "src/PropertiesReader",
  "maintainers": [
    {
      "name": "steveukx",
      "email": "steve@mydev.co"
    }
  ],
  "name": "properties-reader",
  "optionalDependencies": {},
  "readme": "Properties-Reader\n=================\n\nAn ini file compatible properties reader for [Node.JS](http://nodejs.org)\n\nInstallation\n============\n\nThe easiest installation is through [NPM](http://npmjs.org):\n\n    npm install properties-reader\n\nOr clone the repo https://github.com/steveukx/properties and include the `/src/PropertiesReader.js` script.\n\nAPI\n===\n\nRead properties from a file:\n\n    var PropertiesReader = require('properties-reader');\n    var properties = PropertiesReader('/path/to/properties.file');\n\nThe properties are then accessible either by fully qualified name, or if the property names are in dot-delimited\nnotation, they can be access as an object:\n\n    // fully qualified name\n    var property = properties.get('some.property.name');\n\n    // by object path\n    var property = properties.path().some.property.name;\n\nTo read more than one file, chain calls to the `.append()` method:\n\n    properties.append('/another.file').append('/yet/another.file');\n\nTo read properties from a string, use the `.read()` method:\n\n    properties.read('some.property = Value \\n another.property = Another Value');\n\nTo set a single property into the properties object, use `.set()`:\n\n    properties.set('property.name', 'Property Value');\n\nWhen reading a `.ini` file, sections are created by having a line that contains just a section name in square\nbrackets. The section name is then prefixed to all property names that follow it until another section name is found\nto replace the current section.\n\n    # contents of properties file\n    [main]\n    some.thing = foo\n\n    [blah]\n    some.thing = bar\n\n    // reading these back from the properties reader\n    properties.get('main.some.thing') == 'foo';\n    properties.get('blah.some.thing') == 'bar';\n\nChecking for the current number of properties that have been read into the reader:\n\n    var propertiesCount = properties.length;\n\nThe length is calculated on request, so if accessing this in a loop an efficiency would be achieved by caching the\nvalue.\n\nWhen duplicate names are found in the properties, the first one read will be replaced with the later one.\n\nTo get the complete set of properties, either loop through them with the `.each((key, value) => {})` iterator or\nuse the convenience method `getAllProperties` to return the complete set of flattened properties. \n\nData Types\n==========\n\nProperties will automatically be converted to their regular data types when they represent true/false or numeric\nvalues. To get the original value without any parsing / type coercion applied, use `properties.getRaw('path.to.prop')`.\n\nContributions\n=============\n\nIf you find bugs or want to change functionality, feel free to fork and pull request.\n\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/steveukx/properties.git"
  },
  "scripts": {
    "test": "node test/runner.js"
  },
  "version": "0.0.15"
}
